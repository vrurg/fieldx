[tasks.test-feature-sets]
    category = "Test"
    clear = true
    description = "Test different feature sets"
    script = '''
!include_files ../makefile.ds

echo Testing feature sets with toolchain '${__FIELDX_DEFAULT_TOOLCHAIN__}'

features = array sync serde
feature_sets = generate_power_set ${features}

for fs in ${feature_sets}
    fs = array_join ${fs} ","
    echo "Testing feature set '${fs}'"
    set_env __FIELDX_FEATURE_SET__ ${fs}
    cm_run_task test-with-features
    cm_run_task test-with-features-async
end
'''
    script_runner = "@duckscript"
    toolchain = "${__FIELDX_DEFAULT_TOOLCHAIN__}"

[tasks.test-with-features-async]
    run_task = { name = ["test-async-lock", "test-async-tokio"], fork = true }

[tasks.test-async-lock]
    env      = { __FIELDX_FEATURE_SET__ = "${__FIELDX_FEATURE_SET__},async-lock" }
    run_task = "test-with-features"

[tasks.test-async-tokio]
    env      = { __FIELDX_FEATURE_SET__ = "${__FIELDX_FEATURE_SET__},async-tokio" }
    run_task = "test-with-features"

[tasks.test-with-features]
    category    = "Test"
    description = "Test code compilability with '${__FIELDX_FEATURE_SET__}' features"
    script_runner = "@duckscript"
    script = '''
exec --fail-on-error cargo +${__FIELDX_DEFAULT_TOOLCHAIN__} test --features ${__FIELDX_FEATURE_SET__}
exec --fail-on-error cargo +${__FIELDX_DEFAULT_TOOLCHAIN__} test --features ${__FIELDX_FEATURE_SET__} --examples
'''

# Compilation is useful for updating the error outputs per version+features
[tasks.test-compilation]
    category = "Test"
    clear = true
    description = "Test code compilability"
    script = '''
!include_files ../makefile.ds

echo Testing compilability with toolchain '${__FIELDX_DEFAULT_TOOLCHAIN__}'
cm_run_task compile-default-features

features = array sync serde
feature_sets = generate_power_set ${features}

for fs in ${feature_sets}
    fs = array_join ${fs} ","
    echo "Testing feature set '${fs}' on ${__FIELDX_DEFAULT_TOOLCHAIN__}"
    set_env __FIELDX_FEATURE_SET__ ${fs}
    cm_run_task compile-with-features
    cm_run_task compile-with-features-async
end
'''
    script_runner = "@duckscript"
    toolchain = "${__FIELDX_DEFAULT_TOOLCHAIN__}"

[tasks.compile-default-features]
    condition   = { env_not = { __FIELDX_DEFAULT_TOOLCHAIN__ = "nightly" } }
    args        = ["test", "--test", "compilation", "--", "--nocapture"]
    category    = "Test"
    command     = "cargo"
    description = "Test code compilability with default feature set"
    toolchain   = "${__FIELDX_DEFAULT_TOOLCHAIN__}"

[tasks.compile-with-features]
    condition   = { env_not = { __FIELDX_DEFAULT_TOOLCHAIN__ = "nightly" } }
    args        = ["test", "--test", "compilation", "--features", "${__FIELDX_FEATURE_SET__}", "--", "--nocapture"]
    category    = "Test"
    command     = "cargo"
    description = "Test code compilability with '${__FIELDX_FEATURE_SET__}' features"
    toolchain   = "${__FIELDX_DEFAULT_TOOLCHAIN__}"

[tasks.compile-with-features-async]
    run_task = { name = ["compile-async-lock", "compile-async-tokio"], fork = true }

[tasks.compile-async-lock]
    env      = { __FIELDX_FEATURE_SET__ = "${__FIELDX_FEATURE_SET__},async-lock" }
    run_task = "compile-with-features"

[tasks.compile-async-tokio]
    env      = { __FIELDX_FEATURE_SET__ = "${__FIELDX_FEATURE_SET__},async-tokio" }
    run_task = "compile-with-features"
