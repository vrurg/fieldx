name: CI

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: -D warnings

jobs:
  with_features:
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu, macos, windows]
        toolchain:
          - 1.78
          - stable
          - beta
          - nightly
        include:
          - feature: async-tokio
          - feature: async-lock
          - feature: sync
          - feature: serde
          - feature: async-tokio,sync
          - feature: async-lock,sync
          - feature: async-tokio,serde
          - feature: async-lock,serde
          - feature: sync,serde
          - feature: async-tokio,sync,serde
          - feature: async-lock,sync,serde
        exclude:
          - os: windows
            toolchain: nightly
    env:
      __FIELDX_DEFAULT_TOOLCHAIN__: ${{ matrix.toolchain }}
      __FIELDX_NO_UNCOMPILABLE__: ${{ matrix.toolchain == 'beta' && '1' || '' }}
    steps:
      - uses: actions/checkout@v4
      - name: Show environment variables
        run: env
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: cargo build --verbose --all --features ${{ matrix.feature }}
      - run: cargo test --verbose --all --features ${{ matrix.feature }}
      - run: cargo test --verbose --all --features ${{ matrix.feature }},send_guard
        if: matrix.feature == 'serde'
  all_features:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, macos, windows]
        toolchain:
          - 1.78
          - stable
          - nightly
    env:
      __FIELDX_DEFAULT_TOOLCHAIN__: ${{ matrix.toolchain }}
    steps:
      - uses: actions/checkout@v4
      - name: Show environment variables
        run: env
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: cargo build --verbose --all --features sync,async,serde,send_guard
      - run: cargo test --verbose --all --features sync,async,serde,send_guard
      - run: cargo test --verbose --all --features sync,async,serde
  no_features:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, macos, windows]
        toolchain:
          - 1.78
          - stable
          - nightly
    env:
      __FIELDX_DEFAULT_TOOLCHAIN__: ${{ matrix.toolchain }}
    steps:
      - uses: actions/checkout@v4
      - name: Show environment variables
        run: env
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: cargo build --verbose --all
      - name: Test all
        env:
          __FIELDX_DEFAULT_TOOLCHAIN__: ${{ matrix.toolchain }}
        run: cargo test --verbose --all
  build_docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup default nightly
      - run: cargo install cargo-docs-rs
      - run: cargo docs-rs -p fieldx

